/*! For license information please see main.3b8f544765b34db5e643.js.LICENSE.txt */
(()=>{"use strict";var t,e,n={91:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.makeNoise2D=void 0;var i=n(341),s=(Math.sqrt(3)-1)/2,o=(1/Math.sqrt(3)-1)/2;function r(t,e,n){return{dx:-e-t*s,dy:-n-t*s,xsb:e,ysb:n}}e.makeNoise2D=function(t){for(var e=[],n=0;n<d.length;n+=4){for(var p=a[d[n]],c=null,u=null,f=0;f<p.length;f+=3)u=r(p[f],p[f+1],p[f+2]),null===c?e[n/4]=u:c.next=u,c=u;u.next=r(d[n+1],d[n+2],d[n+3])}var m=[];for(n=0;n<h.length;n+=2)m[h[n]]=e[h[n+1]];var y=new Uint8Array(256),g=new Uint8Array(256),v=new Uint8Array(256);for(n=0;n<256;n++)v[n]=n;var x=new Uint32Array(1);for(x[0]=t,x=i.default(i.default(i.default(x))),n=255;n>=0;n--){x=i.default(x);var w=new Uint32Array(1);w[0]=(x[0]+31)%(n+1),w[0]<0&&(w[0]+=n+1),y[n]=v[w[0]],g[n]=14&y[n],v[w[0]]=v[n]}return function(t,e){for(var n=(t+e)*o,i=t+n,r=e+n,a=Math.floor(i),h=Math.floor(r),d=(a+h)*s,p=t-(a+d),c=e-(h+d),u=i-a,f=r-h,v=u+f,x=0,w=m[u-f+1|v<<1|v+f<<2|v+u<<4];void 0!==w;w=w.next){var b=p+w.dx,C=c+w.dy,_=2-b*b-C*C;if(_>0){var P=a+w.xsb,E=h+w.ysb,k=y[255&P],S=g[k+E&255];x+=_*_*_*_*(l[S]*b+l[S+1]*C)}}return.02127659574468085*x}};var a=[[1,1,0,1,0,1,0,0,0],[1,1,0,1,0,1,2,1,1]],l=[5,2,2,5,-5,2,-2,5,5,-2,2,-5,-5,-2,-2,-5],h=[0,1,1,0,4,1,17,0,20,2,21,2,22,5,23,5,26,4,39,3,42,4,43,3],d=[0,0,1,-1,0,0,-1,1,0,2,1,1,1,2,2,0,1,2,0,2,1,0,0,0]},644:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.makeNoise3D=void 0;var i=n(341),s=(Math.sqrt(4)-1)/3,o=(1/Math.sqrt(4)-1)/3;function r(t,e,n,i){return{dx:-e-t*s,dy:-n-t*s,dz:-i-t*s,xsb:e,ysb:n,zsb:i}}e.makeNoise3D=function(t){for(var e=[],n=0;n<d.length;n+=9){for(var p=a[d[n]],c=null,u=null,f=0;f<p.length;f+=4)u=r(p[f],p[f+1],p[f+2],p[f+3]),null===c?e[n/9]=u:c.next=u,c=u;u.next=r(d[n+1],d[n+2],d[n+3],d[n+4]),u.next.next=r(d[n+5],d[n+6],d[n+7],d[n+8])}var m=[];for(n=0;n<h.length;n+=2)m[h[n]]=e[h[n+1]];var y=new Uint8Array(256),g=new Uint8Array(256),v=new Uint8Array(256);for(n=0;n<256;n++)v[n]=n;var x=new Uint32Array(1);for(x[0]=t,x=i.default(i.default(i.default(x))),n=255;n>=0;n--){x=i.default(x);var w=new Uint32Array(1);w[0]=(x[0]+31)%(n+1),w[0]<0&&(w[0]+=n+1),y[n]=v[w[0]],g[n]=y[n]%24*3,v[w[0]]=v[n]}return function(t,e,n){for(var i=(t+e+n)*o,r=t+i,a=e+i,h=n+i,d=Math.floor(r),p=Math.floor(a),c=Math.floor(h),u=(d+p+c)*s,f=t-(d+u),v=e-(p+u),x=n-(c+u),w=r-d,b=a-p,C=h-c,_=w+b+C,P=0,E=m[b-C+1|w-b+1<<1|w-C+1<<2|_<<3|_+C<<5|_+b<<7|_+w<<9];void 0!==E;E=E.next){var k=f+E.dx,S=v+E.dy,M=x+E.dz,L=2-k*k-S*S-M*M;if(L>0){var R=d+E.xsb,O=p+E.ysb,z=c+E.zsb,F=y[255&R],N=y[F+O&255],T=g[N+z&255];P+=L*L*L*L*(l[T]*k+l[T+1]*S+l[T+2]*M)}}return.009708737864077669*P}};var a=[[0,0,0,0,1,1,0,0,1,0,1,0,1,0,0,1],[2,1,1,0,2,1,0,1,2,0,1,1,3,1,1,1],[1,1,0,0,1,0,1,0,1,0,0,1,2,1,1,0,2,1,0,1,2,0,1,1]],l=[-11,4,4,-4,11,4,-4,4,11,11,4,4,4,11,4,4,4,11,-11,-4,4,-4,-11,4,-4,-4,11,11,-4,4,4,-11,4,4,-4,11,-11,4,-4,-4,11,-4,-4,4,-11,11,4,-4,4,11,-4,4,4,-11,-11,-4,-4,-4,-11,-4,-4,-4,-11,11,-4,-4,4,-11,-4,4,-4,-11],h=[0,2,1,1,2,2,5,1,6,0,7,0,32,2,34,2,129,1,133,1,160,5,161,5,518,0,519,0,546,4,550,4,645,3,647,3,672,5,673,5,674,4,677,3,678,4,679,3,680,13,681,13,682,12,685,14,686,12,687,14,712,20,714,18,809,21,813,23,840,20,841,21,1198,19,1199,22,1226,18,1230,19,1325,23,1327,22,1352,15,1353,17,1354,15,1357,17,1358,16,1359,16,1360,11,1361,10,1362,11,1365,10,1366,9,1367,9,1392,11,1394,11,1489,10,1493,10,1520,8,1521,8,1878,9,1879,9,1906,7,1910,7,2005,6,2007,6,2032,8,2033,8,2034,7,2037,6,2038,7,2039,6],d=[0,0,1,-1,0,0,1,0,-1,0,0,-1,1,0,0,0,1,-1,0,0,-1,0,1,0,0,-1,1,0,2,1,1,0,1,1,1,-1,0,2,1,0,1,1,1,-1,1,0,2,0,1,1,1,-1,1,1,1,3,2,1,0,3,1,2,0,1,3,2,0,1,3,1,0,2,1,3,0,2,1,3,0,1,2,1,1,1,0,0,2,2,0,0,1,1,0,1,0,2,0,2,0,1,1,0,0,1,2,0,0,2,2,0,0,0,0,1,1,-1,1,2,0,0,0,0,1,-1,1,1,2,0,0,0,0,1,1,1,-1,2,3,1,1,1,2,0,0,2,2,3,1,1,1,2,2,0,0,2,3,1,1,1,2,0,2,0,2,1,1,-1,1,2,0,0,2,2,1,1,-1,1,2,2,0,0,2,1,-1,1,1,2,0,0,2,2,1,-1,1,1,2,0,2,0,2,1,1,1,-1,2,2,0,0,2,1,1,1,-1,2,0,2,0]},76:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.makeNoise4D=void 0;var i=n(341),s=(Math.sqrt(5)-1)/4,o=(1/Math.sqrt(5)-1)/4;function r(t,e,n,i,o){return{dx:-e-t*s,dy:-n-t*s,dz:-i-t*s,dw:-o-t*s,xsb:e,ysb:n,zsb:i,wsb:o}}e.makeNoise4D=function(t){for(var e=[],n=0;n<d.length;n+=16){for(var p=a[d[n]],c=null,u=null,f=0;f<p.length;f+=5)u=r(p[f],p[f+1],p[f+2],p[f+3],p[f+4]),null===c?e[n/16]=u:c.next=u,c=u;u.next=r(d[n+1],d[n+2],d[n+3],d[n+4],d[n+5]),u.next.next=r(d[n+6],d[n+7],d[n+8],d[n+9],d[n+10]),u.next.next.next=r(d[n+11],d[n+12],d[n+13],d[n+14],d[n+15])}var m=[];for(n=0;n<h.length;n+=2)m[h[n]]=e[h[n+1]];var y=new Uint8Array(256),g=new Uint8Array(256),v=new Uint8Array(256);for(n=0;n<256;n++)v[n]=n;var x=new Uint32Array(1);for(x[0]=t,x=i.default(i.default(i.default(x))),n=255;n>=0;n--){x=i.default(x);var w=new Uint32Array(1);w[0]=(x[0]+31)%(n+1),w[0]<0&&(w[0]+=n+1),y[n]=v[w[0]],g[n]=252&y[n],v[w[0]]=v[n]}return function(t,e,n,i){for(var r=(t+e+n+i)*o,a=t+r,h=e+r,d=n+r,p=i+r,c=Math.floor(a),u=Math.floor(h),f=Math.floor(d),v=Math.floor(p),x=(c+u+f+v)*s,w=t-(c+x),b=e-(u+x),C=n-(f+x),_=i-(v+x),P=a-c,E=h-u,k=d-f,S=p-v,M=P+E+k+S,L=0,R=m[k-S+1|E-k+1<<1|E-S+1<<2|P-E+1<<3|P-k+1<<4|P-S+1<<5|M<<6|M+S<<8|M+k<<11|M+E<<14|M+P<<17];void 0!==R;R=R.next){var O=w+R.dx,z=b+R.dy,F=C+R.dz,N=_+R.dw,T=2-O*O-z*z-F*F-N*N;if(T>0){var I=c+R.xsb,A=u+R.ysb,D=f+R.zsb,U=v+R.wsb,G=y[255&I],j=y[G+A&255],W=y[j+D&255],H=g[W+U&255];L+=T*T*T*T*(l[H]*O+l[H+1]*z+l[H+2]*F+l[H+3]*N)}}return.03333333333333333*L}};var a=[[0,0,0,0,0,1,1,0,0,0,1,0,1,0,0,1,0,0,1,0,1,0,0,0,1],[3,1,1,1,0,3,1,1,0,1,3,1,0,1,1,3,0,1,1,1,4,1,1,1,1],[1,1,0,0,0,1,0,1,0,0,1,0,0,1,0,1,0,0,0,1,2,1,1,0,0,2,1,0,1,0,2,1,0,0,1,2,0,1,1,0,2,0,1,0,1,2,0,0,1,1],[3,1,1,1,0,3,1,1,0,1,3,1,0,1,1,3,0,1,1,1,2,1,1,0,0,2,1,0,1,0,2,1,0,0,1,2,0,1,1,0,2,0,1,0,1,2,0,0,1,1]],l=[3,1,1,1,1,3,1,1,1,1,3,1,1,1,1,3,-3,1,1,1,-1,3,1,1,-1,1,3,1,-1,1,1,3,3,-1,1,1,1,-3,1,1,1,-1,3,1,1,-1,1,3,-3,-1,1,1,-1,-3,1,1,-1,-1,3,1,-1,-1,1,3,3,1,-1,1,1,3,-1,1,1,1,-3,1,1,1,-1,3,-3,1,-1,1,-1,3,-1,1,-1,1,-3,1,-1,1,-1,3,3,-1,-1,1,1,-3,-1,1,1,-1,-3,1,1,-1,-1,3,-3,-1,-1,1,-1,-3,-1,1,-1,-1,-3,1,-1,-1,-1,3,3,1,1,-1,1,3,1,-1,1,1,3,-1,1,1,1,-3,-3,1,1,-1,-1,3,1,-1,-1,1,3,-1,-1,1,1,-3,3,-1,1,-1,1,-3,1,-1,1,-1,3,-1,1,-1,1,-3,-3,-1,1,-1,-1,-3,1,-1,-1,-1,3,-1,-1,-1,1,-3,3,1,-1,-1,1,3,-1,-1,1,1,-3,-1,1,1,-1,-3,-3,1,-1,-1,-1,3,-1,-1,-1,1,-3,-1,-1,1,-1,-3,3,-1,-1,-1,1,-3,-1,-1,1,-1,-3,-1,1,-1,-1,-3,-3,-1,-1,-1,-1,-3,-1,-1,-1,-1,-3,-1,-1,-1,-1,-3],h=[0,3,1,2,2,3,5,2,6,1,7,1,8,3,9,2,10,3,13,2,16,3,18,3,22,1,23,1,24,3,26,3,33,2,37,2,38,1,39,1,41,2,45,2,54,1,55,1,56,0,57,0,58,0,59,0,60,0,61,0,62,0,63,0,256,3,258,3,264,3,266,3,272,3,274,3,280,3,282,3,2049,2,2053,2,2057,2,2061,2,2081,2,2085,2,2089,2,2093,2,2304,9,2305,9,2312,9,2313,9,16390,1,16391,1,16406,1,16407,1,16422,1,16423,1,16438,1,16439,1,16642,8,16646,8,16658,8,16662,8,18437,6,18439,6,18469,6,18471,6,18688,9,18689,9,18690,8,18693,6,18694,8,18695,6,18696,9,18697,9,18706,8,18710,8,18725,6,18727,6,131128,0,131129,0,131130,0,131131,0,131132,0,131133,0,131134,0,131135,0,131352,7,131354,7,131384,7,131386,7,133161,5,133165,5,133177,5,133181,5,133376,9,133377,9,133384,9,133385,9,133400,7,133402,7,133417,5,133421,5,133432,7,133433,5,133434,7,133437,5,147510,4,147511,4,147518,4,147519,4,147714,8,147718,8,147730,8,147734,8,147736,7,147738,7,147766,4,147767,4,147768,7,147770,7,147774,4,147775,4,149509,6,149511,6,149541,6,149543,6,149545,5,149549,5,149558,4,149559,4,149561,5,149565,5,149566,4,149567,4,149760,9,149761,9,149762,8,149765,6,149766,8,149767,6,149768,9,149769,9,149778,8,149782,8,149784,7,149786,7,149797,6,149799,6,149801,5,149805,5,149814,4,149815,4,149816,7,149817,5,149818,7,149821,5,149822,4,149823,4,149824,37,149825,37,149826,36,149829,34,149830,36,149831,34,149832,37,149833,37,149842,36,149846,36,149848,35,149850,35,149861,34,149863,34,149865,33,149869,33,149878,32,149879,32,149880,35,149881,33,149882,35,149885,33,149886,32,149887,32,150080,49,150082,48,150088,49,150098,48,150104,47,150106,47,151873,46,151877,45,151881,46,151909,45,151913,44,151917,44,152128,49,152129,46,152136,49,152137,46,166214,43,166215,42,166230,43,166247,42,166262,41,166263,41,166466,48,166470,43,166482,48,166486,43,168261,45,168263,42,168293,45,168295,42,168512,31,168513,28,168514,31,168517,28,168518,25,168519,25,280952,40,280953,39,280954,40,280957,39,280958,38,280959,38,281176,47,281178,47,281208,40,281210,40,282985,44,282989,44,283001,39,283005,39,283208,30,283209,27,283224,30,283241,27,283256,22,283257,22,297334,41,297335,41,297342,38,297343,38,297554,29,297558,24,297562,29,297590,24,297594,21,297598,21,299365,26,299367,23,299373,26,299383,23,299389,20,299391,20,299584,31,299585,28,299586,31,299589,28,299590,25,299591,25,299592,30,299593,27,299602,29,299606,24,299608,30,299610,29,299621,26,299623,23,299625,27,299629,26,299638,24,299639,23,299640,22,299641,22,299642,21,299645,20,299646,21,299647,20,299648,61,299649,60,299650,61,299653,60,299654,59,299655,59,299656,58,299657,57,299666,55,299670,54,299672,58,299674,55,299685,52,299687,51,299689,57,299693,52,299702,54,299703,51,299704,56,299705,56,299706,53,299709,50,299710,53,299711,50,299904,61,299906,61,299912,58,299922,55,299928,58,299930,55,301697,60,301701,60,301705,57,301733,52,301737,57,301741,52,301952,79,301953,79,301960,76,301961,76,316038,59,316039,59,316054,54,316071,51,316086,54,316087,51,316290,78,316294,78,316306,73,316310,73,318085,77,318087,77,318117,70,318119,70,318336,79,318337,79,318338,78,318341,77,318342,78,318343,77,430776,56,430777,56,430778,53,430781,50,430782,53,430783,50,431e3,75,431002,72,431032,75,431034,72,432809,74,432813,69,432825,74,432829,69,433032,76,433033,76,433048,75,433065,74,433080,75,433081,74,447158,71,447159,68,447166,71,447167,68,447378,73,447382,73,447386,72,447414,71,447418,72,447422,71,449189,70,449191,70,449197,69,449207,68,449213,69,449215,68,449408,67,449409,67,449410,66,449413,64,449414,66,449415,64,449416,67,449417,67,449426,66,449430,66,449432,65,449434,65,449445,64,449447,64,449449,63,449453,63,449462,62,449463,62,449464,65,449465,63,449466,65,449469,63,449470,62,449471,62,449472,19,449473,19,449474,18,449477,16,449478,18,449479,16,449480,19,449481,19,449490,18,449494,18,449496,17,449498,17,449509,16,449511,16,449513,15,449517,15,449526,14,449527,14,449528,17,449529,15,449530,17,449533,15,449534,14,449535,14,449728,19,449729,19,449730,18,449734,18,449736,19,449737,19,449746,18,449750,18,449752,17,449754,17,449784,17,449786,17,451520,19,451521,19,451525,16,451527,16,451528,19,451529,19,451557,16,451559,16,451561,15,451565,15,451577,15,451581,15,451776,19,451777,19,451784,19,451785,19,465858,18,465861,16,465862,18,465863,16,465874,18,465878,18,465893,16,465895,16,465910,14,465911,14,465918,14,465919,14,466114,18,466118,18,466130,18,466134,18,467909,16,467911,16,467941,16,467943,16,468160,13,468161,13,468162,13,468163,13,468164,13,468165,13,468166,13,468167,13,580568,17,580570,17,580585,15,580589,15,580598,14,580599,14,580600,17,580601,15,580602,17,580605,15,580606,14,580607,14,580824,17,580826,17,580856,17,580858,17,582633,15,582637,15,582649,15,582653,15,582856,12,582857,12,582872,12,582873,12,582888,12,582889,12,582904,12,582905,12,596982,14,596983,14,596990,14,596991,14,597202,11,597206,11,597210,11,597214,11,597234,11,597238,11,597242,11,597246,11,599013,10,599015,10,599021,10,599023,10,599029,10,599031,10,599037,10,599039,10,599232,13,599233,13,599234,13,599235,13,599236,13,599237,13,599238,13,599239,13,599240,12,599241,12,599250,11,599254,11,599256,12,599257,12,599258,11,599262,11,599269,10,599271,10,599272,12,599273,12,599277,10,599279,10,599282,11,599285,10,599286,11,599287,10,599288,12,599289,12,599290,11,599293,10,599294,11,599295,10],d=[0,0,1,-1,0,0,0,1,0,-1,0,0,1,0,0,-1,0,0,-1,1,0,0,0,0,1,-1,0,0,0,1,0,-1,0,0,-1,0,1,0,0,0,-1,1,0,0,0,0,1,-1,0,0,-1,0,0,1,0,0,-1,0,1,0,0,0,-1,1,0,2,1,1,0,0,1,1,1,-1,0,1,1,1,0,-1,0,2,1,0,1,0,1,1,-1,1,0,1,1,0,1,-1,0,2,0,1,1,0,1,-1,1,1,0,1,0,1,1,-1,0,2,1,0,0,1,1,1,-1,0,1,1,1,0,-1,1,0,2,0,1,0,1,1,-1,1,0,1,1,0,1,-1,1,0,2,0,0,1,1,1,-1,0,1,1,1,0,-1,1,1,1,4,2,1,1,0,4,1,2,1,0,4,1,1,2,0,1,4,2,1,0,1,4,1,2,0,1,4,1,1,0,2,1,4,2,0,1,1,4,1,0,2,1,4,1,0,1,2,1,4,0,2,1,1,4,0,1,2,1,4,0,1,1,2,1,2,1,1,0,0,3,2,1,0,0,3,1,2,0,0,1,2,1,0,1,0,3,2,0,1,0,3,1,0,2,0,1,2,0,1,1,0,3,0,2,1,0,3,0,1,2,0,1,2,1,0,0,1,3,2,0,0,1,3,1,0,0,2,1,2,0,1,0,1,3,0,2,0,1,3,0,1,0,2,1,2,0,0,1,1,3,0,0,2,1,3,0,0,1,2,2,3,1,1,1,0,2,1,1,1,-1,2,2,0,0,0,2,3,1,1,0,1,2,1,1,-1,1,2,2,0,0,0,2,3,1,0,1,1,2,1,-1,1,1,2,2,0,0,0,2,3,1,1,1,0,2,1,1,1,-1,2,0,2,0,0,2,3,1,1,0,1,2,1,1,-1,1,2,0,2,0,0,2,3,0,1,1,1,2,-1,1,1,1,2,0,2,0,0,2,3,1,1,1,0,2,1,1,1,-1,2,0,0,2,0,2,3,1,0,1,1,2,1,-1,1,1,2,0,0,2,0,2,3,0,1,1,1,2,-1,1,1,1,2,0,0,2,0,2,3,1,1,0,1,2,1,1,-1,1,2,0,0,0,2,2,3,1,0,1,1,2,1,-1,1,1,2,0,0,0,2,2,3,0,1,1,1,2,-1,1,1,1,2,0,0,0,2,2,1,1,1,-1,0,1,1,1,0,-1,0,0,0,0,0,2,1,1,-1,1,0,1,1,0,1,-1,0,0,0,0,0,2,1,-1,1,1,0,1,0,1,1,-1,0,0,0,0,0,2,1,1,-1,0,1,1,1,0,-1,1,0,0,0,0,0,2,1,-1,1,0,1,1,0,1,-1,1,0,0,0,0,0,2,1,-1,0,1,1,1,0,-1,1,1,0,0,0,0,0,2,1,1,1,-1,0,1,1,1,0,-1,2,2,0,0,0,2,1,1,-1,1,0,1,1,0,1,-1,2,2,0,0,0,2,1,1,-1,0,1,1,1,0,-1,1,2,2,0,0,0,2,1,1,1,-1,0,1,1,1,0,-1,2,0,2,0,0,2,1,-1,1,1,0,1,0,1,1,-1,2,0,2,0,0,2,1,-1,1,0,1,1,0,1,-1,1,2,0,2,0,0,2,1,1,-1,1,0,1,1,0,1,-1,2,0,0,2,0,2,1,-1,1,1,0,1,0,1,1,-1,2,0,0,2,0,2,1,-1,0,1,1,1,0,-1,1,1,2,0,0,2,0,2,1,1,-1,0,1,1,1,0,-1,1,2,0,0,0,2,2,1,-1,1,0,1,1,0,1,-1,1,2,0,0,0,2,2,1,-1,0,1,1,1,0,-1,1,1,2,0,0,0,2,3,1,1,0,0,0,2,2,0,0,0,2,1,1,1,-1,3,1,0,1,0,0,2,0,2,0,0,2,1,1,1,-1,3,1,0,0,1,0,2,0,0,2,0,2,1,1,1,-1,3,1,1,0,0,0,2,2,0,0,0,2,1,1,-1,1,3,1,0,1,0,0,2,0,2,0,0,2,1,1,-1,1,3,1,0,0,0,1,2,0,0,0,2,2,1,1,-1,1,3,1,1,0,0,0,2,2,0,0,0,2,1,-1,1,1,3,1,0,0,1,0,2,0,0,2,0,2,1,-1,1,1,3,1,0,0,0,1,2,0,0,0,2,2,1,-1,1,1,3,1,0,1,0,0,2,0,2,0,0,2,-1,1,1,1,3,1,0,0,1,0,2,0,0,2,0,2,-1,1,1,1,3,1,0,0,0,1,2,0,0,0,2,2,-1,1,1,1,3,3,2,1,0,0,3,1,2,0,0,4,1,1,1,1,3,3,2,0,1,0,3,1,0,2,0,4,1,1,1,1,3,3,0,2,1,0,3,0,1,2,0,4,1,1,1,1,3,3,2,0,0,1,3,1,0,0,2,4,1,1,1,1,3,3,0,2,0,1,3,0,1,0,2,4,1,1,1,1,3,3,0,0,2,1,3,0,0,1,2,4,1,1,1,1,3,3,2,1,0,0,3,1,2,0,0,2,1,1,1,-1,3,3,2,0,1,0,3,1,0,2,0,2,1,1,1,-1,3,3,0,2,1,0,3,0,1,2,0,2,1,1,1,-1,3,3,2,1,0,0,3,1,2,0,0,2,1,1,-1,1,3,3,2,0,0,1,3,1,0,0,2,2,1,1,-1,1,3,3,0,2,0,1,3,0,1,0,2,2,1,1,-1,1,3,3,2,0,1,0,3,1,0,2,0,2,1,-1,1,1,3,3,2,0,0,1,3,1,0,0,2,2,1,-1,1,1,3,3,0,0,2,1,3,0,0,1,2,2,1,-1,1,1,3,3,0,2,1,0,3,0,1,2,0,2,-1,1,1,1,3,3,0,2,0,1,3,0,1,0,2,2,-1,1,1,1,3,3,0,0,2,1,3,0,0,1,2,2,-1,1,1,1]},816:(t,e,n)=>{e.DA=void 0;var i=n(91);Object.defineProperty(e,"DA",{enumerable:!0,get:function(){return i.makeNoise2D}});var s=n(644);var o=n(76)},341:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){var e=new Uint32Array(1);return e[0]=1664525*t[0]+1013904223,e}}},i={};function s(t){var e=i[t];if(void 0!==e)return e.exports;var o=i[t]={exports:{}};return n[t](o,o.exports,s),o.exports}e=Object.getPrototypeOf?t=>Object.getPrototypeOf(t):t=>t.__proto__,s.t=function(n,i){if(1&i&&(n=this(n)),8&i)return n;if("object"==typeof n&&n){if(4&i&&n.__esModule)return n;if(16&i&&"function"==typeof n.then)return n}var o=Object.create(null);s.r(o);var r={};t=t||[null,e({}),e([]),e(e)];for(var a=2&i&&n;"object"==typeof a&&!~t.indexOf(a);a=e(a))Object.getOwnPropertyNames(a).forEach((t=>r[t]=()=>n[t]));return r.default=()=>n,s.d(o,r),o},s.d=(t,e)=>{for(var n in e)s.o(e,n)&&!s.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},s.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),s.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},(()=>{class t{constructor(t=1,e=1,n=1,i=1){this.r=t,this.g=e,this.b=n,this.a=i}clone(){return new t(this.r,this.g,this.b,this.a)}pad(t){return 1==t.length?"0"+t:t}static fromString(t){switch(t.replace("#","").toLowerCase().length){case 3:return this.parseRGB(t);case 4:return this.parseRGBA(t);case 6:return this.parseRRGGBB(t);case 8:return this.parseRRGGBBAA(t);default:return null}}static parseRGB(e){const n=/^#?([a-f\d]{1})([a-f\d]{1})([a-f\d]{1})$/i.exec(e);return n?new t(parseInt(n[1]+n[1],16)/255,parseInt(n[2]+n[2],16)/255,parseInt(n[3]+n[3],16)/255):null}static parseRGBA(e){const n=/^#?([a-f\d]{1})([a-f\d]{1})([a-f\d]{1})([a-f\d]{1})$/i.exec(e);return n?new t(parseInt(n[1]+n[1],16)/255,parseInt(n[2]+n[2],16)/255,parseInt(n[3]+n[3],16)/255,parseInt(n[4]+n[4],16)/255):null}static parseRRGGBB(e){const n=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return n?new t(parseInt(n[1],16)/255,parseInt(n[2],16)/255,parseInt(n[3],16)/255):null}static parseRRGGBBAA(e){const n=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return n?new t(parseInt(n[1],16)/255,parseInt(n[2],16)/255,parseInt(n[3],16)/255,parseInt(n[4],16)/255):null}toString(){const t=Number(Math.floor(255*this.r)).toString(16),e=Number(Math.floor(255*this.g)).toString(16),n=Number(Math.floor(255*this.b)).toString(16),i=Number(Math.floor(255*this.a)).toString(16);return"#"+this.pad(t)+this.pad(e)+this.pad(n)+this.pad(i)}rgbaNotation(){return"rgba("+Math.floor(255*this.r)+", "+Math.floor(255*this.g)+", "+Math.floor(255*this.b)+", "+this.a+")"}static hsl(t,e,n){return this.hsla(t,e,n,1)}static hsla(e,n,i,s=1){const o=n*Math.min(i,1-i),r=(t,n=(t+e/30)%12)=>i-o*Math.max(Math.min(n-3,9-n,1),-1),a=r(0),l=r(8),h=r(4);return new t(a,l,h,s)}}t.Red=new t(1,0,0,1);class e{constructor(t=0,e=0){this.x=t,this.y=e}static up(){return new e(0,1)}copy(){return new e(this.x,this.y)}mult(t=1){return new e(this.x*t,this.y*t)}add(t=new e(0,0)){return new e(this.x+t.x,this.y+t.y)}sub(t=new e(0,0)){return new e(this.x-t.x,this.y-t.y)}len(){return Math.sqrt(this.x*this.x+this.y*this.y)}normalize(){return this.mult(1/this.len())}rotate(t=0){return new e(this.x*Math.cos(t)-this.y*Math.sin(t),this.x*Math.sin(t)+this.y*Math.cos(t))}}class n{constructor(t=[]){this.points=t}static Circle(t=10){const i=[];for(let n=0;n<t;n++)i.push(new e(0,-.5).rotate(n*(2*Math.PI/t)));return new n(i)}static Point(t){return new n([t.copy()])}static Line(t,e,i=0){const s=e.sub(t),o=[];for(let e=0;e<=i;e++){const n=t.add(s.mult(e/i));o.push(n)}return n.of(o)}static of(t){return new n(t)}static Rect(){return new n([new e(-.5,-.5),new e(-.5,.5),new e(.5,.5),new e(.5,-.5)])}transform(t=1,i=new e(0,0),s=0){const o=[];for(let e=0;e<this.points.length;e++){const n=this.points[e].mult(t).rotate(s).add(i);o.push(n)}return new n(o)}}var i,o,r;!function(t){t[t.Closed=0]="Closed",t[t.Line=1]="Line",t[t.Point=2]="Point"}(i||(i={}));class a{constructor(e=t.Red,n=null,s=4,o=i.Closed){this.fillColor=e,this.strokeColor=n,this.strokeWidth=s,this.drawMode=o}static Default(){return new a}static Fill(e=t.Red){return new a(e||t.Red,null,1,i.Closed)}static Line(e=t.Red){return new a(null,e||t.Red,1,i.Line)}static Point(){return new a(t.Red,null,1,i.Point)}}class l{constructor(t){this.canvasElem=t,this.ctx=this.canvasElem.getContext("2d")}render(t){this.canvasElem.width=t.size.x,this.canvasElem.height=t.size.y;const e=this.ctx;if(!e)return;const n=t.size.x,i=t.size.y;this.canvasElem.width=n,this.canvasElem.height=i,this.canvasElem.style.width=n+"px",this.canvasElem.style.height=i+"px",e.clearRect(0,0,this.canvasElem.width,this.canvasElem.height),e.fillStyle=t.background.rgbaNotation(),e.rect(0,0,this.canvasElem.width,this.canvasElem.height),e.fill(),t.layers.forEach((t=>{t.generate().forEach((t=>{t.draw(this)}))}))}draw(t,e){const n=this.ctx;n&&(e.fillColor&&(n.beginPath(),this.drawPoints(n,t.points,e.drawMode),n.fillStyle=e.fillColor.toString(),n.fill()),e.strokeColor&&e.drawMode!=i.Point&&(n.beginPath(),this.drawPoints(n,t.points,e.drawMode),n.lineWidth=e.strokeWidth,n.strokeStyle=e.strokeColor.toString(),n.stroke()))}drawPoints(t,e,n){if(!(e.length<1)){if(n==i.Point)for(let n=0;n<e.length;n++)t.fillRect(e[n].x,e[n].y,1,1);t.moveTo(e[0].x,e[0].y);for(let n=0;n<e.length;n++)t.lineTo(e[n].x,e[n].y);n==i.Closed&&t.lineTo(e[0].x,e[0].y)}}}class h{constructor(t=n.Point(new e),i=a.Default()){this.polygon=t,this.style=i}draw(t){t.draw(this.polygon,this.style)}}!function(t){t[t.Converter=0]="Converter",t[t.Creator=1]="Creator",t[t.Modifier=2]="Modifier"}(o||(o={}));class d{desciption(){return""}help(){const t=new Map;return this.getParams().params.forEach(((e,n)=>{t.set(n,e.description)})),new p(this.name(),this.desciption(),t,this.type())}}class p{constructor(t,e,n,i){this.name=t,this.description=e,this.parameterExplanations=n,this.type=i}}!function(t){t[t.String=0]="String",t[t.Integer=1]="Integer",t[t.Float=2]="Float",t[t.Point=3]="Point",t[t.Color=4]="Color"}(r||(r={}));class c{constructor(t,e,n,i){this.key=t,this.value=e,this.type=n,this.description=i}static of(t,e,n,i="no description"){return new c(t,e,n,i)}}class u{constructor(t=new Map){this.params=t}static of(t){const e=new Map;return t.forEach((t=>{e.set(t.key,t)})),new u(e)}get(t,e){const n=this.params.get(t);return void 0===n?e:n.value}set(t,e){const n=this.params.get(t);void 0!==n&&(n.value=e)}}class f{constructor(t=[]){this.ops=t}generate(){if(this.ops.length<1)return[];let t=[];for(let e=0;e<this.ops.length;e++)t=this.ops[e].execute(t);return t}removeOpAt(t){this.ops.splice(t,1)}moveOpDown(t){t<this.ops.length-1&&this.swapOp(t,t+1)}swapOp(t,e){const n=this.ops[e];this.ops[e]=this.ops[t],this.ops[t]=n}moveOpUp(t){t>0&&this.swapOp(t,t-1)}appendOp(t){this.ops.push(t)}}class m{constructor(n=new t,i=new e(500,500),s=[]){this.background=n,this.size=i,this.layers=s}addLayer(t){this.layers.push(t)}removeLayer(t){this.layers.splice(t,1)}shapes(){return this.layers}moveLayerDown(t){t<this.layers.length-1&&this.swapOp(t,t+1)}swapOp(t,e){const n=this.layers[e];this.layers[e]=this.layers[t],this.layers[t]=n}moveLayerUp(t){t>0&&this.swapOp(t,t-1)}}var y=function(t,e){return y=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},y(t,e)};function g(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}y(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var v,x=function(){function t(){}return t._xfnv1a=function(t){for(var e=2166136261,n=0;n<t.length;n++)e=Math.imul(e^t.charCodeAt(n),16777619);return function(){return e+=e<<13,e^=e>>>7,e+=e<<3,e^=e>>>17,(e+=e<<5)>>>0}},t}(),w=function(t){function e(n){var i=t.call(this)||this;return i.a=e._xfnv1a(n)(),i}return g(e,t),e.prototype.next=function(){var t=this.a+=1831565813;return t=Math.imul(t^t>>>15,1|t),(((t^=t+Math.imul(t^t>>>7,61|t))^t>>>14)>>>0)/4294967296},e}(x),b=function(t){function e(n){var i=t.call(this)||this,s=e._xfnv1a(n);return i.a=s(),i.b=s(),i.c=s(),i.d=s(),i}return g(e,t),e.prototype.next=function(){this.a>>>=0,this.b>>>=0,this.c>>>=0,this.d>>>=0;var t=this.a+this.b|0;return this.a=this.b^this.b>>>9,this.b=this.c+(this.c<<3)|0,this.c=this.c<<21|this.c>>>11,this.d=this.d+1|0,t=t+this.d|0,this.c=this.c+t|0,(t>>>0)/4294967296},e}(x),C=function(t){function e(n){var i=t.call(this)||this,s=e._xfnv1a(n);return i.a=s(),i.b=s(),i.c=s(),i.d=s(),i}return g(e,t),e.prototype.next=function(){var t=this.b<<9,e=5*this.a;return e=e<<7|9*(e>>>25),this.c^=this.a,this.d^=this.b,this.b^=this.c,this.a^=this.d,this.c^=t,this.d=this.d<<11|this.d>>>21,(e>>>0)/4294967296},e}(x);!function(t){t.sfc32="sfc32",t.mulberry32="mulberry32",t.xoshiro128ss="xoshiro128ss"}(v||(v={}));var _=function(){function t(t,e){void 0===e&&(e=v.sfc32),this.str=t,this.prng=e,this.generator=this._initializeGenerator()}return t.prototype.next=function(){return this.generator.next()},t.prototype._initializeGenerator=function(){if(function(t){return null===t}(t=this.str)||function(t){return void 0===t}(t))return this.wrap();var t;switch(this.prng){case"sfc32":return new b(this.str);case"mulberry32":return new w(this.str);case"xoshiro128ss":return new C(this.str);default:return this.wrap()}},t.prototype.wrap=function(){return{next:function(){return Math.random()}}},t}();class P{constructor(t,e=new _(t)){this.rand=e}uniform(t,e){return t+this.rand.next()*(e-t)}boxMullerTransform(){const t=this.rand.next(),e=this.rand.next();return{z0:Math.sqrt(-2*Math.log(t))*Math.cos(2*Math.PI*e),z1:Math.sqrt(-2*Math.log(t))*Math.sin(2*Math.PI*e)}}normal(t,e){const{z0:n}=this.boxMullerTransform();return n*e+t}}class E extends d{constructor(){super(...arguments),this.start=new e(0,0),this.end=new e(100,100),this.divisions=10}desciption(){return"The StaticLine operation generates a new line shape from the <i>start</i> point to the <i>end</i> point with the given and <i>divisions</i>"}type(){return o.Creator}getParams(){return u.of([c.of("start",this.start,r.Point,"Start point of the generated line"),c.of("end",this.end,r.Point,"End point of the generated line"),c.of("divisions",this.divisions,r.Integer,"Number of divisions")])}setParams(t){this.start=t.get("start",new e(0,0)),this.end=t.get("end",new e(100,100)),this.divisions=t.get("divisions",10)}execute(t){return[new h(n.Line(this.start,this.end,this.divisions),a.Line())]}name(){return"StaticLine"}}class k extends d{constructor(){super(...arguments),this.divisions=10,this.direction=e.up(),this.length=100}type(){return o.Converter}desciption(){return"The Lines operation takes every point of every input shape as a starting point and generates a new line shape in the given <i>direction</i> with the given <i>length</i> and <i>divisions</i>"}getParams(){return u.of([c.of("divisions",this.divisions,r.Integer,"Number of subdivisions of each generated line"),c.of("direction",this.direction,r.Point,"Direction of each generated line"),c.of("length",this.length,r.Float,"Length of each generated line")])}setParams(t){this.divisions=t.get("divisions",10),this.length=t.get("length",100),this.direction=t.get("direction",e.up())}execute(t){const e=[];return t.forEach((t=>{t.polygon.points.forEach((i=>{const s=t.style.strokeColor||t.style.fillColor,o=i.add(this.direction.mult(this.length));e.push(new h(n.Line(i,o,this.divisions),a.Line(s)))}))})),e}name(){return"Lines"}}class S extends d{constructor(){super(...arguments),this.radius=10,this.resolution=10}type(){return o.Converter}desciption(){return"This operation takes every point in every shape from the input and generates a circle at this point with the given <i>radius</i> and <i>resolution</i>."}getParams(){return u.of([c.of("radius",this.radius,r.Float,"Radius of the created circles"),c.of("resolution",this.resolution,r.Integer,'Count of sides on the "circle"')])}setParams(t){this.radius=t.get("radius",10),this.resolution=t.get("resolution",10)}execute(t){const i=[];return t.forEach((t=>{t.polygon.points.forEach((s=>{const o=t.style.fillColor||t.style.strokeColor;i.push(new h(n.Circle(this.resolution).transform(2*this.radius,new e(s.x,s.y)),a.Fill(o)))}))})),i}name(){return"Circles"}}var M=s(816);class L{static explosion(t,e,n,i,s){const o=t.polygon.points;for(let t=0;t<o.length;t++){const r=o[t],a=r.sub(e).len(),l=r.sub(e).normalize();let h=0;a<n&&(h=i*Math.pow(1-a/n,s));const d=r.add(l.mult(h));r.x=d.x,r.y=d.y}}}class R extends d{constructor(){super(...arguments),this.fillColor=new t(0,0,1)}desciption(){return"The StaticFillColor operation sets a fill color for each shape"}name(){return"StaticFillColor"}type(){return o.Modifier}execute(t){return t.forEach((t=>{t.style.fillColor=this.fillColor.clone()})),t}getParams(){return u.of([c.of("color",this.fillColor,r.Color,"Fill color")])}setParams(e){this.fillColor=e.get("color",new t(0,0,1))}}class O{toString(t){const e=[];t.layers.forEach((t=>e.push(this.convertLayer(t))));const n={size:t.size,background:t.background,layers:e};return JSON.stringify(n)}convertOp(t){const e={};return t.getParams().params.forEach((t=>{e[t.key]=t.value})),{name:t.name(),params:e}}convertLayer(t){const e=[];return t.ops.forEach((t=>{e.push(this.convertOp(t))})),{ops:e}}fromString(t){return this.fromJson(JSON.parse(t))}fromJson(t){const e=new m;return this.parseDocument(e,t),e}parseDocument(n,i){const s=this.parsePoint(i.size);n.size=s||new e(500,500);const o=this.parseColor(i.background);n.background=o||new t(1,1,1,1),n.layers=this.parseLayer(i)}parseLayer(t){const e=[],n=t.layers;if(n)for(let t=0;t<n.length;t++){const i=n[t],s=new f,o=i.ops,a=[];for(let t=0;t<o.length;t++){const e=o[t],n=O.operationByName(e.name),i=e.params;if(n&&i){const t=n.getParams();for(const e of t.params.keys()){const n=t.params.get(e),s=i[e];n&&(n.type==r.Point?t.set(e,this.parsePoint(s)):n.type==r.Integer?t.set(e,parseInt(s)):n.type==r.Float?t.set(e,parseFloat(s)):n.type==r.String?t.set(e,s):n.type==r.Color&&t.set(e,this.parseColor(s)))}n.setParams(t),a.push(n)}}s.ops=a,e.push(s)}return e}static operationByName(t){if(!t)return null;for(let e=0;e<O.OPERATIONS.length;e++){const n=new O.OPERATIONS[e];if(n.name()==t)return n}return null}parseColor(e){return e&&null!=e.r&&null!=e.g&&null!=e.b&&null!=e.a?new t(e.r,e.g,e.b,e.a):null}parsePoint(t,n="x",i="y"){return t&&null!=t[n]&&null!=t[i]?new e(t[n],t[i]):null}}O.OPERATIONS=[class extends d{constructor(){super(...arguments),this.seed="seed",this.count=20,this.position=new e,this.dist=0,this.dist_deviation=50,this.angle_min=0,this.angle_max=2*Math.PI}type(){return o.Creator}desciption(){return"The NormalDistPoints operation generates points around the <i>center</i> with a normal distribution"}getParams(){return u.of([c.of("count",this.count,r.Integer,"Number of generated points"),c.of("seed",this.seed,r.String,"seed for the RNG"),c.of("dist",this.dist,r.Float,"Mean distance from the center Point"),c.of("dist_deviation",this.dist_deviation,r.Float,"Standard deviation for the distance"),c.of("angle_min",this.angle_min,r.Float,"Start angle"),c.of("angle_max",this.angle_max,r.Float,"End angle"),c.of("position",this.position,r.Point,"Center point")])}setParams(t){this.count=t.get("count",20),this.seed=t.get("seed","seed"),this.dist=t.get("dist",0),this.dist_deviation=t.get("dist_deviation",50),this.angle_min=t.get("angle_min",0),this.angle_max=t.get("angle_max",2*Math.PI),this.position=t.get("position",new e)}execute(t){const i=[],s=new P(this.seed);for(let t=0;t<this.count;t++){const t=s.uniform(this.angle_min,this.angle_max),o=s.normal(this.dist,this.dist_deviation),r=e.up().rotate(t).mult(o).add(this.position);i.push(new h(n.of([r]),a.Point()))}return i}name(){return"NormalDistPoints"}},class extends d{constructor(){super(...arguments),this.seed="seed"}desciption(){return"The RandomHue operation sets the background and stroke color to a random hue"}type(){return o.Modifier}setParams(t){this.seed=t.get("seed","seed")}getParams(){return u.of([c.of("seed",this.seed,r.String,"Seed for the RNG")])}execute(e){const n=new P(this.seed);for(let i=0;i<e.length;i++){if(e[i].style.fillColor){const s=n.uniform(0,360);e[i].style.fillColor=t.hsl(s,1,.5)}if(e[i].style.strokeColor){const s=n.uniform(0,360);e[i].style.strokeColor=t.hsl(s,1,.5)}}return e}name(){return"RandomHue"}},class extends d{constructor(){super(...arguments),this.seed="seed",this.count=20,this.x_min=0,this.x_max=500,this.y_min=0,this.y_max=500}type(){return o.Creator}desciption(){return"The RandomPoints operation creates <i>count</i> random points in the specified area (<i>x_min</i> to <i>x_max</i>, <i>y_min</i> to <i>y_max</i>"}getParams(){return u.of([c.of("count",this.count,r.Integer,"Number of points to generate"),c.of("seed",this.seed,r.String,"Seed for the RNG"),c.of("x_min",this.x_min,r.Float,"Lower bound of the x values"),c.of("x_max",this.x_max,r.Float,"Upper bound of the x values"),c.of("y_min",this.y_min,r.Float,"Lower bound of the y values"),c.of("y_max",this.y_max,r.Float,"Upper bound of the y values")])}setParams(t){this.count=t.get("count",20),this.seed=t.get("seed","seed"),this.x_min=t.get("x_min",0),this.x_max=t.get("x_max",500),this.y_min=t.get("y_min",0),this.y_max=t.get("y_max",500)}execute(t){const i=[],s=new P(this.seed);for(let t=0;t<this.count;t++){const t=s.uniform(this.x_min,this.x_max),o=s.uniform(this.y_min,this.y_max);i.push(new h(n.Point(new e(t,o)),a.Point()))}return i}name(){return"RandomPoints"}},class extends d{constructor(){super(...arguments),this.size=10}desciption(){return"The Rects operation takes every point of every input shape as a center point for a new rect with the given <i>size</i>"}type(){return o.Converter}getParams(){return u.of([c.of("size",this.size,r.Float,"Size of the generated rects")])}setParams(t){this.size=t.get("size",10)}execute(t){const i=[];return t.forEach((t=>{t.polygon.points.forEach((s=>{const o=t.style.fillColor||t.style.strokeColor;i.push(new h(n.Rect().transform(this.size,new e(s.x,s.y)),a.Fill(o)))}))})),i}name(){return"Rects"}},class extends d{constructor(){super(...arguments),this.radius=20,this.center=new e(0,0),this.resolution=20}type(){return o.Creator}desciption(){return"The StaticCircle operation creates a circle shape in the given <i>radius</i> at the given <i>position</i> with the given <i>resolution</i>"}getParams(){return u.of([c.of("radius",this.radius,r.Float,"Radius of the generated circle"),c.of("position",this.center,r.Point,"Position of the generated circle"),c.of("resolution",this.resolution,r.Integer,"Resolution of the generated circle")])}setParams(t){this.radius=t.get("radius",20),this.center=t.get("position",new e(0,0)),this.resolution=t.get("resolution",20)}execute(t){return[new h(n.Circle(this.resolution).transform(this.radius,this.center))]}name(){return"StaticCircle"}},E,class extends d{constructor(){super(...arguments),this.position=new e}type(){return o.Creator}desciption(){return"The StaticPoint operation  generates a single point shape at the given <i>position</i>"}getParams(){return u.of([c.of("position",this.position,r.Point,"Position of the generated point")])}setParams(t){this.position=t.get("position",new e)}execute(t){return[new h(n.Point(this.position),a.Point())]}name(){return"StaticPoint"}},class extends d{constructor(){super(...arguments),this.size=10,this.position=new e}type(){return o.Creator}desciption(){return"The StaticRect operation  generates a single rect shape at the given <i>position</i> with the given <i>size</i>"}getParams(){return u.of([c.of("size",this.size,r.Float,"Size of the generated rect"),c.of("position",this.position,r.Point,"Position of the generated rect")])}setParams(t){this.size=t.get("size",20),this.position=t.get("position",new e)}execute(t){return[new h(n.Rect().transform(this.size,this.position))]}name(){return"StaticRect"}},k,class extends d{constructor(){super(...arguments),this.position=new e(250,250),this.radius=100,this.force=20,this.exp=4}type(){return o.Creator}desciption(){return"The StaticExplosion operation goes throuh every point in every shape in the input and simulates an explosion force on it. <br/>\n        If the point is further away than the <i>radius</i> the point is not moved.<br/>\n        Otherwise a <i>force</i> away from the <i>position</i> is applied to the point depending on the distrance from the <i>position</i>.<br/><br/>\n\n        The formular is: <i>force</i> * (1 - (distance / radius))^exp<br/>\n        "}getParams(){return u.of([c.of("position",this.position,r.Point,"Position of the explosion force"),c.of("radius",this.radius,r.Float,"Radius of the explosion"),c.of("force",this.force,r.Float,"Force of the explosion"),c.of("exp",this.exp,r.Float,"Exponent of the explosion")])}setParams(t){this.position=t.get("position",new e(250,250)),this.radius=t.get("radius",100),this.force=t.get("force",20),this.exp=t.get("exp",4)}execute(t){for(let e=0;e<t.length;e++){const n=t[e];L.explosion(n,this.position,this.radius,this.force,this.exp)}return t}name(){return"StaticExplosion"}},S,class extends d{constructor(){super(...arguments),this.amount=2,this.seed="seed"}desciption(){return"The Jiggle operation moves every point from every input shape in a random direction and random distance between 0 and the given <i>amount</i>"}type(){return o.Modifier}getParams(){return u.of([c.of("amount",this.amount,r.Float,"Maximum distance to move a point"),c.of("seed",this.seed,r.String,"Seed for the RNG")])}setParams(t){this.amount=t.get("amount",2),this.seed=t.get("seed","seed")}execute(t){const n=new P(this.seed);for(let i=0;i<t.length;i++){const s=t[i].polygon.points;for(let t=0;t<s.length;t++){const i=s[t],o=n.uniform(0,this.amount),r=n.uniform(0,2*Math.PI),a=e.up().rotate(r).mult(o),l=i.add(a);i.x=l.x,i.y=l.y}}return t}name(){return"Jiggle"}},class extends d{constructor(){super(...arguments),this.step_count=100,this.step_size=3,this.seed=0,this.offset=new e,this.scale=.1}type(){return o.Converter}desciption(){return"The FlowFieldLines operation takes every point of every input shape as a starpoint for a line which follows along a flowfield created with the open-simplex-noise algorithm."}getParams(){return u.of([c.of("step_count",this.step_count,r.Integer,"Number of steps to follow along the flowfield"),c.of("step_size",this.step_size,r.Float,"Distance between zwo steps"),c.of("seed",this.seed,r.Integer,"Seed for the RNG of the flowfield"),c.of("offset",this.offset,r.Point,"Offset to shift the flowfield"),c.of("scale",this.scale,r.Float,"Scale of the flow field")])}setParams(t){this.step_count=t.get("step_count",100),this.step_size=t.get("step_size",3),this.seed=t.get("seed",0),this.offset=t.get("offset",new e),this.scale=t.get("scale",.1)}execute(t){const i=[],s=(0,M.DA)(this.seed);return t.forEach((t=>{t.polygon.points.forEach((o=>{const r=t.style.strokeColor||t.style.fillColor;let l=o.copy();const d=[l];for(let t=0;t<this.step_count;t++){const t=l.add(this.offset).mult(this.scale),n=2*s(t.x,t.y)*Math.PI,i=e.up().rotate(n).normalize().mult(this.step_size);l=l.add(i),d.push(l)}i.push(new h(n.of(d),a.Line(r)))}))})),i}name(){return"FlowFieldLines"}},class extends d{constructor(){super(...arguments),this.divisions=10,this.position=new e,this.length=100}type(){return o.Converter}desciption(){return"The RadialLines operation takes every point of every input shape as a starting point and generates a new line shape away from the given <i>position</i> with the given <i>length</i> and <i>divisions</i>"}getParams(){return u.of([c.of("position",this.position,r.Point),c.of("divisions",this.divisions,r.Integer,"Number of subdivisions of each generated line"),c.of("length",this.length,r.Float,"Length of each generated line")])}setParams(t){this.divisions=t.get("divisions",10),this.length=t.get("length",100),this.position=t.get("position",new e)}execute(t){const e=[];return t.forEach((t=>{t.polygon.points.forEach((i=>{const s=i.add(i.sub(this.position).normalize().mult(this.length)),o=t.style.strokeColor||t.style.fillColor;e.push(new h(n.Line(i,s,this.divisions),a.Line(o)))}))})),e}name(){return"RadialLines"}},R,class extends d{constructor(){super(...arguments),this.fillColor=new t(0,1,0),this.strokeWidth=1}desciption(){return"the StaticStroke operation sets a <i>color</i> and <i>strokeWidth</i> of each shape"}name(){return"StaticStroke"}type(){return o.Modifier}execute(t){return t.forEach((t=>{t.style.strokeColor=this.fillColor.clone(),t.style.strokeWidth=this.strokeWidth})),t}getParams(){return u.of([c.of("color",this.fillColor,r.Color,"Fill color"),c.of("strokeWidth",this.strokeWidth,r.Float,"Stroke width")])}setParams(e){this.fillColor=e.get("color",new t(0,1,0)),this.strokeWidth=e.get("strokeWidth",1)}},class extends d{constructor(){super(...arguments),this.seed="seed",this.count=5,this.x_min=0,this.x_max=500,this.y_min=0,this.y_max=500,this.radius=100,this.force=20,this.exp=4}type(){return o.Creator}desciption(){return"The RandomExplosions operation goes throuh every point in every shape in the input and simulates <i>count</i> number of explosion forces on it. <br/>\n        If the point is further away than the <i>radius</i> the point is not moved.<br/>\n        Otherwise a <i>force</i> away from the position is applied to the point depending on the distrance.<br/><br/>\n\n        The formular is: <i>force</i> * (1 - (distance / radius))^exp<br/>\n        "}getParams(){return u.of([c.of("count",this.count,r.Integer,"Number of points to generate"),c.of("seed",this.seed,r.String,"Seed for the RNG"),c.of("x_min",this.x_min,r.Float,"Lower bound of the x values"),c.of("x_max",this.x_max,r.Float,"Upper bound of the x values"),c.of("y_min",this.y_min,r.Float,"Lower bound of the y values"),c.of("y_max",this.y_max,r.Float,"Upper bound of the y values"),c.of("radius",this.radius,r.Float,"Radius of the explosion"),c.of("force",this.force,r.Float,"Force of the explosion"),c.of("exp",this.exp,r.Float,"Exponent of the explosion")])}setParams(t){this.count=t.get("count",5),this.seed=t.get("seed","seed"),this.x_min=t.get("x_min",0),this.x_max=t.get("x_max",500),this.y_min=t.get("y_min",0),this.y_max=t.get("y_max",500),this.radius=t.get("radius",100),this.force=t.get("force",20),this.exp=t.get("exp",4)}execute(t){const n=new P(this.seed),i=[];for(let t=0;t<this.count;t++){const t=n.uniform(this.x_min,this.x_max),s=n.uniform(this.y_min,this.y_max);i.push(new e(t,s))}for(let e=0;e<t.length;e++){const n=t[e];i.forEach((t=>{L.explosion(n,t,this.radius,this.force,this.exp)}))}return t}name(){return"RandomExplosions"}}].sort(((t,e)=>(new t).name().localeCompare((new e).name())));class z{constructor(){this.nextId=0,this.opNames=O.OPERATIONS.map((t=>(new t).name())).sort()}newId(){return this.nextId++,this.nextId}select(t,e){const n=document.createElement("select");null!=t&&n.classList.add(t);for(let t=0;t<e.length;t++){const i=e[t],s=document.createElement("option");s.value=i,s.innerHTML=i,n.appendChild(s)}return n}buildHelp(t){const e=this.div(["help-wrapper"]);e.style.background="#fff";const n=this.button([],"X",(()=>{t()}));e.appendChild(n);const i=this.div(["help-name"]),s=this.div(["help-desc"]);return i.innerHTML="CreativeJS",s.innerHTML="\nCreativeJS is a interactive tool for generative artwork in the browser.<br/><br/>\nTo generate an image you combine any of the operations below. An operation gets a \nlist of <i>shapes</i> as input and generates a list of shapes as output. \nA shape consists of a polygon(a list of 2D points) and a draw style (background color, stroke color, stroke size and draw mode (closed, line, point)).<br/>\nEach of this properties can be modified with diffrent operations<br/><br/>\n\nOperations like <i>RandomPoints</i> only generate new shapes and ignore every input.<br/>\nOperations like <i>Jiggle</i> just modify the input then return it to the next operation.<br/>\nOperations like <i>Rects</i> generate new shapes based on the given input.<br/>\n",e.appendChild(i),e.appendChild(s),O.OPERATIONS.forEach((t=>{const n=(new t).help(),i=this.div(["help-op-wrapper"]),s=this.div(["help-op-name"]);s.innerHTML=n.name;const o=this.div(["help-op-description"]);o.innerHTML=n.description;const r=this.div(["help-op-params-headline"]);r.innerHTML="Parameters",i.appendChild(s),i.appendChild(o),i.appendChild(r),n.parameterExplanations.forEach(((t,e)=>{const n=this.div(["clearfix","help-param-wrapper"]),s=this.div(["help-param-name"]);s.innerHTML=e;const o=this.div(["help-param-description"]);o.innerHTML=t,n.appendChild(s),n.appendChild(o),i.appendChild(n)})),e.appendChild(i)})),e}build(t,e){const n=this.div(),i=this.div(["layer-wrapper"]),s=this.div(["layer-header","clearfix"]),o=this.div(["layer-name"]);o.innerText="Document",s.appendChild(o),i.appendChild(s);const a=this.div(["params-wrapper","clearfix"]);a.style.display="block",i.appendChild(a),o.onclick=()=>{"block"==a.style.display?a.style.display="none":a.style.display="block"},a.appendChild(this.inputColor("background",t.background,(n=>{t.background=n,e()}))),a.appendChild(this.inputPoint("size",t.size,(n=>{t.size=n,e()}))),n.appendChild(i);for(let i=0;i<t.layers.length;i++){const s=t.layers[i],o=this.div(["layer-wrapper"]),a=this.div(["layer-header","clearfix"]),l=this.div(["layer-name"]);l.innerText="Layer "+i+" | Add Operation",a.appendChild(l);const h=this.div(["add-op-wrapper"]),d=this.select("add-op-select",this.opNames),p=this.button(["op-btn","op-add"],"&#43;",(()=>{const t=d.selectedOptions[0].value,n=O.operationByName(t);null!=n&&(s.appendOp(n),e())}));h.appendChild(d),h.appendChild(p),a.appendChild(h),t.layers.length>1&&a.appendChild(this.button(["op-btn","layer-remove"],"&#10005;",(()=>{confirm("Do you really want to delete layer "+i+"?")&&(t.removeLayer(i),e())}))),i>0&&a.appendChild(this.button(["op-btn","op-move-up"],"&#9651;",(()=>{t.moveLayerUp(i),e()}))),i<t.layers.length-1&&a.appendChild(this.button(["op-btn","op-move-down"],"&#9661;",(()=>{t.moveLayerDown(i),e()}))),o.appendChild(a);const c=this.div(["ops-wrapper"]);for(let t=0;t<s.ops.length;t++){const n=s.ops[t],i=this.div(["op-wrapper"]),o=this.div(["op-header","clearfix"]),a=this.div(["op-name"]);a.innerText=n.name(),o.appendChild(a),o.appendChild(this.button(["op-btn","op-remove"],"&#10005;",(()=>{confirm("Do you really want to delete "+n.name()+"?")&&(s.removeOpAt(t),e())}))),t>0&&o.appendChild(this.button(["op-btn","op-move-up"],"&#9651;",(()=>{s.moveOpUp(t),e()}))),t<s.ops.length-1&&o.appendChild(this.button(["op-btn","op-move-down"],"&#9661;",(()=>{s.moveOpDown(t),e()})));const l=n.getParams();i.appendChild(o);const h=this.div(["params-wrapper","clearfix"]);h.style.display="block",i.appendChild(h),a.onclick=()=>{"block"==h.style.display?h.style.display="none":h.style.display="block"},l.params.forEach((t=>{const i=this.div(["param-wrapper"]);let s=null;t.type==r.Float?s=this.input(t.key,t.value,((i,s)=>{const o=parseFloat(i);s.value=o.toString(),l.set(t.key,o),n.setParams(l),e()})):t.type==r.Integer?s=this.input(t.key,t.value,((i,s)=>{const o=parseInt(i);s.value=o.toString(),l.set(t.key,o),n.setParams(l),e()})):t.type==r.String?s=this.input(t.key,t.value,((i,s)=>{s.value=i,l.set(t.key,i),n.setParams(l),e()})):t.type==r.Point?s=this.inputPoint(t.key,t.value,(i=>{l.set(t.key,i),n.setParams(l),e()})):t.type==r.Color&&(s=this.inputColor(t.key,t.value,(i=>{l.set(t.key,i),n.setParams(l),e()}))),null!=s&&i.appendChild(s),h.appendChild(i)})),c.appendChild(i)}o.appendChild(c),c.style.display="block",l.onclick=()=>{"block"==c.style.display?c.style.display="none":c.style.display="block"},n.appendChild(o)}const l=this.div(["add-layer-wrapper"]);return l.appendChild(this.button(["button"],"New Layer",(()=>{t.addLayer(new f),e()}))),n.appendChild(l),n}input(t,e,n){const i=this.div();i.classList.add("clearfix");const s="input_"+this.newId(),o=document.createElement("label");o.classList.add("param-label"),o.innerText=t,o.htmlFor=s;const r=document.createElement("input");return r.classList.add("param-input"),r.type="text",r.id=s,r.value=e,r.onchange=()=>{n(r.value,r)},i.appendChild(o),i.appendChild(r),i}inputColor(e,n,i){const s=this.div(["clearfix"]),o=document.createElement("label");o.classList.add("param-label"),o.innerText=e,s.appendChild(o);const r=document.createElement("input");r.classList.add("param-input"),r.type="text",r.value=n.toString(),s.appendChild(r);const a=this.div(["color-preview"]);return s.appendChild(a),a.style.background=n.toString(),r.onchange=()=>{const e=t.fromString(r.value);e&&(a.style.background=e.toString(),i(e))},s}inputPoint(t,n,i){const s=this.div(["clearfix"]),o=document.createElement("label");o.classList.add("param-label"),o.innerText=t;const r=document.createElement("input"),a=document.createElement("input");r.classList.add("param-input"),a.classList.add("param-input"),r.type="text",a.type="text",r.value=n.x.toString(),a.value=n.y.toString();const l=()=>{const t=parseFloat(r.value),n=parseFloat(a.value);r.value=t.toString(),a.value=n.toString(),i(new e(t,n))};return r.onchange=l,a.onchange=l,s.appendChild(o),s.appendChild(r),s.appendChild(a),s}div(t=null){const e=document.createElement("div");return null!=t&&null!=t&&t.forEach((t=>e.classList.add(t))),e}button(t,e,n){const i=document.createElement("button");return null!=t&&t.forEach((t=>i.classList.add(t))),i.onclick=n,i.innerHTML=e,i}}const F=JSON.parse('{"size":{"x":500,"y":500},"background":{"r":0,"g":0,"b":0,"a":1},"layers":[{"ops":[{"name":"RandomPoints","params":{"count":200,"seed":"seed","x_min":0,"x_max":500,"y_min":0,"y_max":500}},{"name":"RadialLines","params":{"position":{"x":250,"y":250},"divisions":10,"length":100}},{"name":"StaticStroke","params":{"color":{"r":1,"g":0.9607843137254902,"b":0.8941176470588236,"a":1},"strokeWidth":1}}]}]}');var N=s.t(F,2);const T=JSON.parse('{"size":{"x":500,"y":500},"background":{"r":0,"g":0,"b":0,"a":1},"layers":[{"ops":[{"name":"RandomPoints","params":{"count":10000,"seed":"seed","x_min":0,"x_max":500,"y_min":0,"y_max":500}},{"name":"RadialLines","params":{"position":{"x":250,"y":250},"divisions":10,"length":100}},{"name":"StaticStroke","params":{"color":{"r":1,"g":0.9607843137254902,"b":0.8941176470588236,"a":0.13333333333333333},"strokeWidth":1}}]}]}');var I=s.t(T,2);const A=JSON.parse('{"size":{"x":500,"y":500},"background":{"r":0,"g":0,"b":0,"a":1},"layers":[{"ops":[{"name":"RandomPoints","params":{"count":10000,"seed":"seed","x_min":0,"x_max":500,"y_min":0,"y_max":500}},{"name":"RadialLines","params":{"position":{"x":250,"y":250},"divisions":40,"length":100}},{"name":"StaticStroke","params":{"color":{"r":1,"g":0.9607843137254902,"b":0.8941176470588236,"a":0.13333333333333333},"strokeWidth":1}},{"name":"RandomExplosions","params":{"count":10,"seed":"20","x_min":0,"x_max":500,"y_min":0,"y_max":500,"radius":100,"force":20,"exp":2}}]}]}');var D=s.t(A,2);const U=JSON.parse('{"size":{"x":500,"y":500},"background":"#ffffffff","layers":[{"ops":[{"name":"RandomPoints","params":{"count":4000,"seed":"seed","x_min":0,"x_max":500,"y_min":0,"y_max":500}},{"name":"FlowFieldLines","params":{"step_count":250,"step_size":2,"seed":0,"offset":{"x":250,"y":-200},"scale":0.0015}},{"name":"StaticStroke","params":{"color":{"r":0.09411764705882353,"g":0.15294117647058825,"b":0.2784313725490196,"a":0.06666666666666667},"strokeWidth":1}}]},{"ops":[{"name":"RandomPoints","params":{"count":2000,"seed":"seed","x_min":0,"x_max":500,"y_min":0,"y_max":500}},{"name":"FlowFieldLines","params":{"step_count":250,"step_size":2,"seed":0,"offset":{"x":0,"y":0},"scale":0.0015}},{"name":"StaticStroke","params":{"color":{"r":0.39215686274509803,"g":0.49411764705882355,"b":0.40784313725490196,"a":0.06666666666666667},"strokeWidth":1}}]}]}');const G={examples:new Map([["Starburst",N],["Starburst 2",I],["Starburst Exploded",D],["Double FlowField",s.t(U,2)]])};const j=new class{constructor(t){this.renderer=null,this.sdoc=null,this.helpContainer=null,this.examplesContainer=null,this.uiContainer=null,this.canvasElem=null,this.canvasWrapper=null;const e=document.getElementById(t);null!=e&&(this.createRenderer(e),this.createUiContainer(e),this.createHelpContainer(e),this.createExamplesContainer(e))}createExamplesContainer(t){this.examplesContainer=document.createElement("div"),this.examplesContainer.classList.add("creative-examples-container"),t.appendChild(this.examplesContainer)}createHelpContainer(t){this.helpContainer=document.createElement("div"),this.helpContainer.classList.add("creative-help-container"),t.appendChild(this.helpContainer)}createUiContainer(t){this.uiContainer=document.createElement("div"),this.uiContainer.classList.add("creative-ui-container"),t.appendChild(this.uiContainer)}createRenderer(t){this.canvasWrapper=document.createElement("div"),this.canvasWrapper.classList.add("creative-canvas-wrapper"),this.canvasElem=document.createElement("canvas"),this.canvasElem&&(this.canvasElem.id="Canvas",this.canvasElem.className="creative-canvas",this.canvasWrapper.appendChild(this.canvasElem),t.appendChild(this.canvasWrapper),this.renderer=new l(this.canvasElem))}draw(){this.sdoc&&this.renderer&&this.renderer.render(this.sdoc)}displayDocument(t){t&&(this.sdoc=t,this.buildUi(),this.draw())}download(){if(!this.canvasElem)return;const t=document.createElement("a"),e=Number(Math.floor(Math.random()*Number.MAX_SAFE_INTEGER)).toString(16);t.setAttribute("download","Creative_"+e+".png");const n=this.canvasElem.toDataURL("image/png").replace(/^data:image\/png/,"data:application/octet-stream");t.setAttribute("href",n),t.click()}downloadJSON(){const t=this.sdoc;if(!this.canvasElem||!t)return;const e=document.createElement("a"),n=Number(Math.floor(Math.random()*Number.MAX_SAFE_INTEGER)).toString(16);e.setAttribute("download","Creative_JSON_"+n+".json");const i=new Blob([(new O).toString(t)],{type:"application/json"}),s=window.URL.createObjectURL(i);e.setAttribute("href",s),e.click()}button(t,e){const n=document.createElement("button");return n.classList.add("btn"),n.classList.add("btn-primary"),n.onclick=()=>{e()},n.innerText=t,n}buildUi(){if(!this.uiContainer||!this.sdoc)return;this.uiContainer.textContent="";const t=document.createElement("div");t.classList.add("btn-group"),t.append(this.button("Update",(()=>{this.displayDocument(this.sdoc)}))),t.append(this.button("PNG",(()=>{this.download()}))),t.append(this.button("JSON",(()=>{this.downloadJSON()}))),t.append(this.button("Help",(()=>{this.displayHelp()}))),t.append(this.button("Examples",(()=>{this.displayExamples()})));const e=document.createElement("div");e.classList.add("btn-group");const n=document.createElement("input");n.type="file",n.onchange=()=>{const t=n.files;if(t){const e=new FileReader,n=t.item(0);n&&(e.onload=t=>{var e,n;const i=null===(n=null===(e=t.target)||void 0===e?void 0:e.result)||void 0===n?void 0:n.toString();if(i){const t=(new O).fromString(i);this.displayDocument(t)}},e.readAsText(n))}};const i=document.createElement("span");i.innerHTML="Open",e.append(i),e.append(n),this.uiContainer.appendChild(t),this.uiContainer.appendChild(e);const s=(new z).build(this.sdoc,(()=>{this.displayDocument(this.sdoc)}));this.uiContainer.append(s);const o=document.createElement("textarea");o.style.width="500px",o.style.height="500px",o.value=(new O).toString(this.sdoc)}displayExamples(){const t=this.examplesContainer;if(t){t.style.display="block",t.innerText="";const e=document.createElement("div");e.classList.add("examples-title"),e.innerHTML="Examples",t.appendChild(e),t.appendChild(this.button("X",(()=>{t.style.display="none"}))),t.appendChild(document.createElement("br")),t.appendChild(document.createElement("br")),G.examples.forEach(((e,n)=>{t.appendChild(this.button(n,(()=>{confirm("Do you want to replace the current settings with the example "+n)&&(this.displayDocument((new O).fromJson(e)),t.style.display="none")}))),t.appendChild(document.createElement("br"))}))}}displayHelp(){const t=this.helpContainer,e=this.uiContainer,n=this.canvasWrapper;if(t){t.style.display="block";const i=(new z).buildHelp((()=>{t.style.display="none",e&&(e.style.display="block"),n&&(n.style.display="block"),this.displayDocument(this.sdoc)}));t.innerText="",t.append(i)}e&&(e.style.display="none"),n&&(n.style.display="none")}}("app"),W=new m,H=new E,J=H.getParams();J.set("start",new e(0,0)),J.set("end",new e(500,0)),H.setParams(J);const B=new k,q=B.getParams();q.set("length",500),B.setParams(q);const X=new f([H,B,new S,new R]);W.addLayer(X),j.displayDocument(W)})()})();